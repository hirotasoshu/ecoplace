[{"C:\\Users\\criempie\\Documents\\GitHub\\ecoplace\\src\\index.js":"1","C:\\Users\\criempie\\Documents\\GitHub\\ecoplace\\src\\App.js":"2","C:\\Users\\criempie\\Documents\\GitHub\\ecoplace\\src\\reportWebVitals.js":"3","C:\\Users\\criempie\\Documents\\GitHub\\ecoplace\\src\\pages\\About\\index.js":"4","C:\\Users\\criempie\\Documents\\GitHub\\ecoplace\\src\\components\\Header\\index.js":"5","C:\\Users\\criempie\\Documents\\GitHub\\ecoplace\\src\\components\\Buttons\\Link.js":"6","C:\\Users\\criempie\\Documents\\GitHub\\ecoplace\\src\\pages\\Profile\\index.js":"7","C:\\Users\\criempie\\Documents\\GitHub\\ecoplace\\src\\components\\Topic\\index.js":"8","C:\\Users\\criempie\\Documents\\GitHub\\ecoplace\\src\\components\\Footer\\index.js":"9","C:\\Users\\criempie\\Documents\\GitHub\\ecoplace\\src\\pages\\FAQ\\index.js":"10","C:\\Users\\criempie\\Documents\\GitHub\\ecoplace\\src\\components\\DropDownDescription\\index.js":"11","C:\\Users\\criempie\\Documents\\GitHub\\ecoplace\\src\\components\\TypeOfWaste\\index.js":"12","C:\\Users\\criempie\\Documents\\GitHub\\ecoplace\\src\\pages\\Rating\\index.js":"13","C:\\Users\\criempie\\Documents\\GitHub\\ecoplace\\src\\components\\Table\\index.js":"14","C:\\Users\\criempie\\Documents\\GitHub\\ecoplace\\src\\components\\Buttons\\LinkOnClick.js":"15","C:\\Users\\criempie\\Documents\\GitHub\\ecoplace\\src\\pages\\Registration\\index.js":"16","C:\\Users\\criempie\\Documents\\GitHub\\ecoplace\\src\\components\\InputText\\index.js":"17","C:\\Users\\criempie\\Documents\\GitHub\\ecoplace\\src\\components\\InputChoose\\index.js":"18","C:\\Users\\criempie\\Documents\\GitHub\\ecoplace\\src\\components\\Buttons\\Button.js":"19","C:\\Users\\criempie\\Documents\\GitHub\\ecoplace\\src\\components\\ChooseTypeOfWaste\\index.js":"20"},{"size":691,"mtime":1610706768957,"results":"21","hashOfConfig":"22"},{"size":1265,"mtime":1610731189741,"results":"23","hashOfConfig":"22"},{"size":362,"mtime":499162500000,"results":"24","hashOfConfig":"22"},{"size":2136,"mtime":1610736484906,"results":"25","hashOfConfig":"22"},{"size":2015,"mtime":1610740930790,"results":"26","hashOfConfig":"22"},{"size":821,"mtime":1610730904383,"results":"27","hashOfConfig":"22"},{"size":12189,"mtime":1610752044972,"results":"28","hashOfConfig":"22"},{"size":720,"mtime":1610714911344,"results":"29","hashOfConfig":"22"},{"size":596,"mtime":1610712097040,"results":"30","hashOfConfig":"22"},{"size":5368,"mtime":1610728819688,"results":"31","hashOfConfig":"22"},{"size":1393,"mtime":1610731040090,"results":"32","hashOfConfig":"22"},{"size":717,"mtime":1610727861905,"results":"33","hashOfConfig":"22"},{"size":928,"mtime":1610726595679,"results":"34","hashOfConfig":"22"},{"size":2450,"mtime":1610727814988,"results":"35","hashOfConfig":"22"},{"size":531,"mtime":1610729511373,"results":"36","hashOfConfig":"22"},{"size":7810,"mtime":1610740282957,"results":"37","hashOfConfig":"22"},{"size":1578,"mtime":1610751103969,"results":"38","hashOfConfig":"22"},{"size":802,"mtime":1610736070674,"results":"39","hashOfConfig":"22"},{"size":691,"mtime":1610749164315,"results":"40","hashOfConfig":"22"},{"size":769,"mtime":1610748273729,"results":"41","hashOfConfig":"22"},{"filePath":"42","messages":"43","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"44"},"1x2043f",{"filePath":"45","messages":"46","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"44"},{"filePath":"47","messages":"48","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"44"},{"filePath":"49","messages":"50","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"44"},{"filePath":"51","messages":"52","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"44"},{"filePath":"53","messages":"54","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"44"},{"filePath":"55","messages":"56","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"57","messages":"58","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"59","usedDeprecatedRules":"44"},{"filePath":"60","messages":"61","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"62","usedDeprecatedRules":"44"},{"filePath":"63","messages":"64","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"44"},{"filePath":"65","messages":"66","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"44"},{"filePath":"67","messages":"68","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"69","usedDeprecatedRules":"44"},{"filePath":"70","messages":"71","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"44"},{"filePath":"72","messages":"73","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"44"},{"filePath":"74","messages":"75","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"76","usedDeprecatedRules":"44"},{"filePath":"77","messages":"78","errorCount":0,"warningCount":10,"fixableErrorCount":0,"fixableWarningCount":0,"source":"79","usedDeprecatedRules":"44"},{"filePath":"80","messages":"81","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"82","messages":"83","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"44"},{"filePath":"84","messages":"85","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"86","usedDeprecatedRules":"44"},{"filePath":"87","messages":"88","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"44"},"C:\\Users\\criempie\\Documents\\GitHub\\ecoplace\\src\\index.js",[],["89","90"],"C:\\Users\\criempie\\Documents\\GitHub\\ecoplace\\src\\App.js",[],"C:\\Users\\criempie\\Documents\\GitHub\\ecoplace\\src\\reportWebVitals.js",[],"C:\\Users\\criempie\\Documents\\GitHub\\ecoplace\\src\\pages\\About\\index.js",[],"C:\\Users\\criempie\\Documents\\GitHub\\ecoplace\\src\\components\\Header\\index.js",[],"C:\\Users\\criempie\\Documents\\GitHub\\ecoplace\\src\\components\\Buttons\\Link.js",[],"C:\\Users\\criempie\\Documents\\GitHub\\ecoplace\\src\\pages\\Profile\\index.js",["91","92"],"C:\\Users\\criempie\\Documents\\GitHub\\ecoplace\\src\\components\\Topic\\index.js",["93"],"import React, { useState} from \"react\";\r\nimport { createUseStyles } from 'react-jss';\r\n\r\nconst useStyles = createUseStyles({\r\n    topic: {\r\n        boxSizing: \"border-box\",\r\n        position: \"relative\",\r\n        width: \"100%\",\r\n        minHeight: 40,\r\n        height: \"5rem\", \r\n        backgroundColor: \"#25BA00\",\r\n        fontSize: 24,\r\n        paddingLeft: 20,\r\n    },\r\n    text: {\r\n        position: \"absolute\",\r\n        color: \"white\",\r\n        bottom: 15,\r\n    },\r\n});\r\n\r\nconst Topic = React.memo(({ text }) => {\r\n    const classes = useStyles();\r\n\r\n    return (\r\n        <div className={classes.topic}>\r\n            <span className={classes.text}>{text}</span>\r\n        </div>\r\n    );\r\n})\r\n\r\nexport default Topic;","C:\\Users\\criempie\\Documents\\GitHub\\ecoplace\\src\\components\\Footer\\index.js",["94"],"import React, { useState} from \"react\";\r\nimport { createUseStyles } from 'react-jss';\r\n\r\nconst useStyles = createUseStyles({\r\n    footer: {\r\n        width: \"100%\",\r\n        height: \"max-content\",\r\n        textAlign: \"center\",\r\n        backgroundColor: \"#25BA00\",\r\n        padding: \"5px 0\",\r\n        color: \"white\",\r\n        fontSize: 18,\r\n        fontWeight: 500,\r\n    },\r\n});\r\n\r\nconst Footer = React.memo(() => {\r\n    const classes = useStyles();\r\n\r\n    return (\r\n        <div className={classes.footer}>\r\n            Â© 2020-2021, Ecoplace\r\n        </div>\r\n    );\r\n})\r\n\r\nexport default Footer;","C:\\Users\\criempie\\Documents\\GitHub\\ecoplace\\src\\pages\\FAQ\\index.js",[],"C:\\Users\\criempie\\Documents\\GitHub\\ecoplace\\src\\components\\DropDownDescription\\index.js",[],"C:\\Users\\criempie\\Documents\\GitHub\\ecoplace\\src\\components\\TypeOfWaste\\index.js",["95"],"import React, { useState} from \"react\";\r\nimport { createUseStyles } from 'react-jss';\r\n\r\nconst useStyles = createUseStyles({\r\n    typeOfWaste: {\r\n        padding: \"6px 12px\",\r\n        borderRadius: 15,\r\n    },\r\n    text: {\r\n        fontSize: 18,\r\n        fontWeight: 500,\r\n        color: \"white\",\r\n        textAlign: \"center\",\r\n    },\r\n});\r\n\r\nconst TypeOfWaste = React.memo(({ text, color, size }) => {\r\n    const classes = useStyles();\r\n\r\n    return (\r\n        <div className={classes.typeOfWaste} style={{backgroundColor: color}}>\r\n            <span className={classes.text} >\r\n                      {size === \"small\" ? text[0] : text}\r\n            </span>\r\n        </div>\r\n    );\r\n})\r\n\r\nexport default TypeOfWaste;","C:\\Users\\criempie\\Documents\\GitHub\\ecoplace\\src\\pages\\Rating\\index.js",[],"C:\\Users\\criempie\\Documents\\GitHub\\ecoplace\\src\\components\\Table\\index.js",[],"C:\\Users\\criempie\\Documents\\GitHub\\ecoplace\\src\\components\\Buttons\\LinkOnClick.js",["96"],"import React, { useState} from \"react\";\r\nimport { createUseStyles } from 'react-jss';\r\n\r\n\r\nconst useStyles = createUseStyles({\r\n    link: {\r\n        backgroundColor: \"white\",\r\n        border: 0,\r\n        outline: 0,\r\n        fontSize: 18,\r\n\r\n        \"&:hover\": {\r\n            cursor: \"pointer\",\r\n        },\r\n    },\r\n});\r\n\r\nconst Link = React.memo(({ text, onClick }) => {\r\n    const classes = useStyles();\r\n    \r\n    return (\r\n        <div onClick={onClick} className={classes.link}>{text}</div>\r\n    );\r\n})\r\n\r\nexport default Link;","C:\\Users\\criempie\\Documents\\GitHub\\ecoplace\\src\\pages\\Registration\\index.js",["97","98","99","100","101","102","103","104","105","106"],"import React, { useState } from \"react\";\r\nimport { createUseStyles } from 'react-jss';\r\n\r\nimport Topic from \"../../components/Topic\";\r\nimport InputText from \"../../components/InputText\";\r\nimport InputChoose from \"../../components/InputChoose\";\r\nimport TypeOfWaste from \"../../components/TypeOfWaste\";\r\nimport ChooseTypeOfWaste from \"../../components/ChooseTypeOfWaste\";\r\nimport Button from \"../../components/Buttons/Button\";\r\n\r\nconst useStyles = createUseStyles({\r\n    container: {\r\n        padding: \"30px 10rem\",\r\n        display: \"flex\",\r\n        flexDirection: \"column\",\r\n    },\r\n    imageContainer: {\r\n        display: \"flex\",\r\n        width: 100,\r\n        height: 100,\r\n        backgroundColor: \"#525252\",\r\n        borderRadius: 100,\r\n    },\r\n    image: {\r\n        margin: \"auto\",\r\n    },\r\n    upload: {\r\n        margin: \"0 auto\",\r\n        display: 'flex',\r\n        flexDirection: 'column',\r\n        gap: 20,\r\n        alignItems: \"center\",\r\n    },\r\n    input: {\r\n        display: \"none\",\r\n    },\r\n    inputLabel: {\r\n        color: \"#25BA00\",\r\n        fontSize: 18,\r\n        \"&:hover\": {\r\n            cursor: \"pointer\",\r\n        }\r\n    },\r\n    grayLine: {\r\n        border: \"1px solid #E3E3E3\",\r\n        width: \"100%\",\r\n    },\r\n    typesContainer: {\r\n        display: \"flex\",\r\n        flexWrap: \"wrap\",\r\n        gap: 5,\r\n        marginBottom: 20, // asd\r\n    },\r\n});\r\n\r\nfunction Registration() {\r\n    const classes = useStyles();\r\n    const [login, setLogin] = useState(\"\");\r\n    const [password, setPassword] = useState(\"\");\r\n    const [organisationName, setOrganisationName] = useState(\"\");\r\n    const [descriptionOrg, setDescriptionOrg] = useState(\"\");\r\n    const [types, setTypes] = useState([]);\r\n    const [street, setStreet] = useState(\"\");\r\n    const [house, setHouse] = useState(\"\");\r\n    const [office, setOffice] = useState(\"\");\r\n    const [telephoneNumber, setTelephoneNumber] = useState(\"\");\r\n    const [site, setSite] = useState(\"\");\r\n\r\n    const onChoose = (type) => {\r\n        let temp = types.slice();\r\n        temp.push(type);\r\n        setTypes(temp);\r\n    }\r\n\r\n    const onUnChoose = (type) => {\r\n        let temp = types.slice();\r\n        let index = temp.indexOf(type);\r\n        temp.splice(index, 1);\r\n        setTypes(temp);\r\n    }\r\n\r\n    console.log(types)\r\n\r\n    return(\r\n        <div className={classes.registration}>\r\n            <Topic text=\"Ð ÐÐÐÐ¡Ð¢Ð ÐÐ¦ÐÐ¯\" />\r\n            \r\n            <div className={classes.container}>\r\n                <div className={classes.upload}>\r\n                    <div className={classes.imageContainer}>\r\n                        <img className={classes.image} src=\"./resycArrows.png\" />\r\n                    </div>\r\n                \r\n                    <input className={classes.input} type=\"file\" id=\"uploadPhoto\" accept=\"image/*\" />\r\n                    <label className={classes.inputLabel} for=\"uploadPhoto\">ÐÐ°Ð³ÑÑÐ·Ð¸ÑÑ ÑÐ¾ÑÐ¾</label>\r\n                </div>\r\n\r\n                <br />\r\n\r\n                <InputText label=\"ÐÐ¾Ð³Ð¸Ð½ *\" onChange={setLogin} />\r\n                <br />\r\n                <InputText label=\"ÐÐ°ÑÐ¾Ð»Ñ *\" onChange={setPassword} />\r\n\r\n                <hr className={classes.grayLine} />\r\n\r\n                <InputText label=\"ÐÐ°Ð·Ð²Ð°Ð½Ð¸Ðµ Ð¾Ð³ÑÐ°Ð½Ð¸Ð·Ð°ÑÐ¸Ð¸ *\" onChange={setOrganisationName} />\r\n                <br />\r\n                <InputText label=\"ÐÐ¿Ð¸ÑÐ°Ð½Ð¸Ðµ Ð¾ÑÐ³Ð°Ð½Ð¸Ð·Ð°ÑÐ¸Ð¸\" onChange={setDescriptionOrg} type=\"textarea\" />\r\n                <br />\r\n                <InputChoose label=\"Ð¢Ð¸Ð¿Ñ Ð¿ÐµÑÐµÑÐ°Ð±Ð°ÑÑÐ²Ð°ÐµÐ¼ÑÑ Ð¾ÑÑÐ¾Ð´Ð¾Ð²\">\r\n                    <div className={classes.typesContainer}>\r\n                        <ChooseTypeOfWaste type=\"Ð¡ÑÐµÐºÐ»Ð¾\"\r\n                        onChoose={(type) => onChoose(type)} \r\n                        onUnChoose={(type) => onUnChoose(type)}>\r\n                            <TypeOfWaste text=\"Ð¡ÑÐµÐºÐ»Ð¾\" color=\"#24C2F4\" />\r\n                        </ChooseTypeOfWaste>\r\n\r\n                        <ChooseTypeOfWaste type=\"ÐÐ»Ð°ÑÑÐ¸Ðº\"\r\n                        onChoose={(type) => onChoose(type)} \r\n                        onUnChoose={(type) => onUnChoose(type)}>\r\n                            <TypeOfWaste text=\"ÐÐ»Ð°ÑÑÐ¸Ðº\" color=\"#F4B924\" />\r\n                        </ChooseTypeOfWaste>\r\n                                \r\n                        <ChooseTypeOfWaste type=\"ÐÐµÑÐ°Ð»Ð»\"\r\n                        onChoose={(type) => onChoose(type)} \r\n                        onUnChoose={(type) => onUnChoose(type)}>\r\n                            <TypeOfWaste text=\"ÐÐµÑÐ°Ð»Ð»\" color=\"#7776C4\" />\r\n                        </ChooseTypeOfWaste>\r\n\r\n                        <ChooseTypeOfWaste type=\"ÐÐÐ¥\"\r\n                        onChoose={(type) => onChoose(type)} \r\n                        onUnChoose={(type) => onUnChoose(type)}>\r\n                            <TypeOfWaste text=\"ÐÐÐ¥\" color=\"#C4768D\" />\r\n                        </ChooseTypeOfWaste>\r\n\r\n                        <ChooseTypeOfWaste type=\"ÐÐ°ÑÑÐ¾Ð½ Ð¸ Ð±ÑÐ¼Ð°Ð³Ð°\"\r\n                        onChoose={(type) => onChoose(type)} \r\n                        onUnChoose={(type) => onUnChoose(type)}>\r\n                            <TypeOfWaste text=\"ÐÐ°ÑÑÐ¾Ð½ Ð¸ Ð±ÑÐ¼Ð°Ð³Ð°\" color=\"#B557C7\" />\r\n                        </ChooseTypeOfWaste>\r\n\r\n                        <ChooseTypeOfWaste type=\"ÐÐ°ÑÑÐ¾Ð½ Ð¸ Ð±ÑÐ¼Ð°Ð³Ð°\"\r\n                        onChoose={(type) => onChoose(type)} \r\n                        onUnChoose={(type) => onUnChoose(type)}>\r\n                            <TypeOfWaste text=\"ÐÐ°ÑÑÐ¾Ð½ Ð¸ Ð±ÑÐ¼Ð°Ð³Ð°\" color=\"#76C47E\" />\r\n                        </ChooseTypeOfWaste>\r\n\r\n                        {[\"ÐÐ¾Ð»Ð¸ÑÑÐ¸Ð»ÐµÐ½ÑÐµÑÐµÑÑÐ°Ð»Ð°Ñ\",\"ÐÐ¾Ð»Ð¸ÑÑÐ¸Ð»ÐµÐ½ Ð²ÑÑÐ¾ÐºÐ¾Ð¹ Ð¿Ð»Ð¾ÑÐ½Ð¾ÑÑÐ¸\", \"ÐÐ¾Ð»Ð¸Ð²Ð¸Ð½Ð¸Ð»ÑÐ»Ð¾ÑÐ¸Ð´\", \"ÐÐ¾Ð»Ð¸ÑÑÐ¸Ð»ÐµÐ½ Ð½Ð¸Ð·ÐºÐ¾Ð¹ Ð¿Ð»Ð¾ÑÐ½Ð¾ÑÑÐ¸\", \"ÐÐ¾Ð»Ð¸Ð¿ÑÐ¾Ð¿Ð¸Ð»ÐµÐ½\", \"ÐÐ¾Ð»Ð¸ÑÑÐ¸ÑÐ¾Ð»\", \"ÐÑÐ¾ÑÐ¸Ðµ Ð¿Ð»Ð°ÑÑÐ¼Ð°ÑÑÑ\", \"ÐÐºÑÐ¸Ð»Ð¾Ð½Ð¸ÑÑÐ¸Ð»Ð±ÑÑÐ°Ð´Ð¸ÐµÐ½ÑÑÐ¸ÑÐ¾Ð»\", \r\n                          \"ÐÐ¾ÑÑÐ¾ÐºÐ°ÑÑÐ¾Ð½\", \"ÐÐ°ÑÑÐ¾Ð½\", \"ÐÑÐ¼Ð°Ð³Ð°\", \"Ð¡ÑÐ°Ð»Ñ\", \"ÐÐ»Ð»ÑÐ¼Ð¸Ð½Ð¸Ð¹\", \"ÐÑÐµÐ²ÐµÑÐ¸Ð½Ð°\", \"ÐÑÐ¾Ð±ÐºÐ°\", \"Ð¥Ð»Ð¾Ð¿Ð¾Ðº\", \"ÐÐ¶ÑÑ\",\r\n                          \"ÐÐµÑÑÐ²ÐµÑÐ½Ð¾Ðµ ÑÑÐµÐºÐ»Ð¾\", \"ÐÐµÐ»ÐµÐ½Ð¾Ðµ ÑÑÐµÐºÐ»Ð¾\", \"ÐÐ¾ÑÐ¸ÑÐ½ÐµÐ²Ð¾Ðµ ÑÑÐµÐºÐ»Ð¾\", \"ÐÐ¾Ð¼Ð±Ð¸Ð½Ð¸ÑÐ¾Ð²Ð°Ð½Ð½ÑÐµ Ð¼Ð°ÑÐµÑÐ¸Ð°Ð»Ñ\", \"ÐÐ¾Ð¼Ð±Ð¸Ð½Ð¸ÑÐ¾Ð²Ð°Ð½Ð½ÑÐµ Ð¼Ð°ÑÐµÑÐ¸Ð°Ð»Ñ\"]\r\n                          .map((type) =>  <ChooseTypeOfWaste type={type}\r\n                                                onChoose={(type) => onChoose(type)} \r\n                                                onUnChoose={(type) => onUnChoose(type)}>\r\n                                                    <TypeOfWaste text={type} color=\"#25BA00\" />\r\n                                            </ChooseTypeOfWaste>\r\n                          )}\r\n\r\n                    </div>\r\n                </InputChoose>\r\n                <br />\r\n                <InputChoose label=\"ÐÐ´ÑÐµÑ Ð¸ Ð²ÑÐµÐ¼Ñ ÑÐ°Ð±Ð¾ÑÑ\" >\r\n                    <InputText label=\"ÐÐ¾Ð¼ *\" onChange={(v) => setHouse(v)} />\r\n                    <InputText label=\"Ð£Ð»Ð¸ÑÐ° *\" onChange={(v) => setStreet(v)} />\r\n                    <InputText label=\"ÐÑÐ¸Ñ\" onChange={(v) => setOffice(v)} />\r\n                    <InputText label=\"Ð¢ÐµÐ»ÐµÑÐ¾Ð½\" onChange={(v) => setTelephoneNumber(v)} />\r\n                    <InputText label=\"Ð¡Ð°Ð¹Ñ\" onChange={(v) => setSite(v)} />\r\n                </InputChoose>\r\n                \r\n                <br />\r\n                <Button text=\"Ð¡Ð¾ÑÑÐ°Ð½Ð¸ÑÑ\" onClick={() => console.log()} style={{backgroundColor: \"#25BA00\", color: \"white\", width: \"100%\", textAlign: \"center\"}} />\r\n            </div>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default Registration;","C:\\Users\\criempie\\Documents\\GitHub\\ecoplace\\src\\components\\InputText\\index.js",[],"C:\\Users\\criempie\\Documents\\GitHub\\ecoplace\\src\\components\\InputChoose\\index.js",[],"C:\\Users\\criempie\\Documents\\GitHub\\ecoplace\\src\\components\\Buttons\\Button.js",["107"],"import React, { useState } from \"react\";\r\nimport { createUseStyles } from 'react-jss';\r\n\r\n\r\nconst useStyles = createUseStyles({\r\n    button: {\r\n        display: \"flex\",\r\n        lineHeight: 0,\r\n        alignItems: \"center\",\r\n        padding: \"15px 40px\",\r\n        color: \"#25BA00\",\r\n        border: \"1px solid #25BA00\",\r\n        borderRadius: 7,\r\n        width: \"max-content\",\r\n\r\n        \"&:hover\": {\r\n            cursor: \"pointer\",\r\n        }\r\n    },\r\n});\r\n\r\nconst Button = React.memo(({ text, onClick, style }) => {\r\n    const classes = useStyles();\r\n\r\n    return (\r\n        <div onClick={onClick} className={classes.button} style={style}>{text}</div>\r\n    );\r\n})\r\n\r\nexport default Button;","C:\\Users\\criempie\\Documents\\GitHub\\ecoplace\\src\\components\\ChooseTypeOfWaste\\index.js",[],{"ruleId":"108","replacedBy":"109"},{"ruleId":"110","replacedBy":"111"},{"ruleId":"112","severity":1,"message":"113","line":105,"column":12,"nodeType":"114","messageId":"115","endLine":105,"endColumn":20},{"ruleId":"112","severity":1,"message":"116","line":105,"column":22,"nodeType":"114","messageId":"115","endLine":105,"endColumn":33},{"ruleId":"112","severity":1,"message":"117","line":1,"column":17,"nodeType":"114","messageId":"115","endLine":1,"endColumn":25},{"ruleId":"112","severity":1,"message":"117","line":1,"column":17,"nodeType":"114","messageId":"115","endLine":1,"endColumn":25},{"ruleId":"112","severity":1,"message":"117","line":1,"column":17,"nodeType":"114","messageId":"115","endLine":1,"endColumn":25},{"ruleId":"112","severity":1,"message":"117","line":1,"column":17,"nodeType":"114","messageId":"115","endLine":1,"endColumn":25},{"ruleId":"112","severity":1,"message":"118","line":58,"column":12,"nodeType":"114","messageId":"115","endLine":58,"endColumn":17},{"ruleId":"112","severity":1,"message":"119","line":59,"column":12,"nodeType":"114","messageId":"115","endLine":59,"endColumn":20},{"ruleId":"112","severity":1,"message":"120","line":60,"column":12,"nodeType":"114","messageId":"115","endLine":60,"endColumn":28},{"ruleId":"112","severity":1,"message":"121","line":61,"column":12,"nodeType":"114","messageId":"115","endLine":61,"endColumn":26},{"ruleId":"112","severity":1,"message":"122","line":63,"column":12,"nodeType":"114","messageId":"115","endLine":63,"endColumn":18},{"ruleId":"112","severity":1,"message":"123","line":64,"column":12,"nodeType":"114","messageId":"115","endLine":64,"endColumn":17},{"ruleId":"112","severity":1,"message":"124","line":65,"column":12,"nodeType":"114","messageId":"115","endLine":65,"endColumn":18},{"ruleId":"112","severity":1,"message":"125","line":66,"column":12,"nodeType":"114","messageId":"115","endLine":66,"endColumn":27},{"ruleId":"112","severity":1,"message":"126","line":67,"column":12,"nodeType":"114","messageId":"115","endLine":67,"endColumn":16},{"ruleId":"127","severity":1,"message":"128","line":91,"column":25,"nodeType":"129","endLine":91,"endColumn":82},{"ruleId":"112","severity":1,"message":"117","line":1,"column":17,"nodeType":"114","messageId":"115","endLine":1,"endColumn":25},"no-native-reassign",["130"],"no-negated-in-lhs",["131"],"no-unused-vars","'newTypes' is assigned a value but never used.","Identifier","unusedVar","'setNewTypes' is assigned a value but never used.","'useState' is defined but never used.","'login' is assigned a value but never used.","'password' is assigned a value but never used.","'organisationName' is assigned a value but never used.","'descriptionOrg' is assigned a value but never used.","'street' is assigned a value but never used.","'house' is assigned a value but never used.","'office' is assigned a value but never used.","'telephoneNumber' is assigned a value but never used.","'site' is assigned a value but never used.","jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","JSXOpeningElement","no-global-assign","no-unsafe-negation"]